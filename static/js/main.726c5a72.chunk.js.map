{"version":3,"sources":["components/MapContainer.js","services/calculator.js","components/Result.js","components/UserInterface.js","App.js","index.js"],"names":["L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","MapContainer","latitude","longitude","setLatitude","setLongitude","map","useRef","ImagePath","Map","ref","center","onClick","event","latlng","lat","toFixed","lng","zoom","TileLayer","url","attribution","Marker","position","calculate","date","data","suncalc","getTimes","sunrise","Date","toISOString","sunset","getTime","e","firstDate","secondDate","startDate","endDate","result","setDate","getDate","time","day","getMonth","getFullYear","push","length","Result","tickFormatter","ms","slice","highest","lowest","i","CustomTooltip","active","payload","label","className","value","width","height","strokeDasharray","angle","dataKey","domain","content","type","stroke","fill","registerLocale","et","setDefaultLocale","UserInterface","useState","setStartDate","setEndDate","setData","useEffect","calculateDayLength","calculatorService","handleChange","target","name","onSubmit","preventDefault","min","max","step","onChange","selected","dateFormat","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.726c5a72.chunk.js","sourcesContent":["import React, {useState, useRef} from 'react';\nimport {Map, Marker, Popup, TileLayer} from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport './MapContainer.css';\n\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n\nconst MapContainer = ({latitude, longitude, setLatitude, setLongitude}) => {\n\n    const map = useRef(null);\n\n    L.Icon.Default.ImagePath='../../public/marker/';\n\n    const changeCoordinates = (event) => {\n        setLatitude(event.latlng.lat.toFixed(3));\n        setLongitude(event.latlng.lng.toFixed(3));\n    };\n\n    return <Map ref={map} center={[latitude, longitude]} onClick={changeCoordinates} zoom={7}>\n        <TileLayer\n            url='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        <Marker position={[latitude, longitude]}/>\n    </Map>\n\n};\n\nexport default MapContainer;","import suncalc from 'suncalc';\n\nconst calculate = (date, latitude, longitude) => {\n    try {\n        const data = suncalc.getTimes(date, latitude, longitude);\n        const sunrise = new Date(data.sunrise.toISOString());\n        const sunset = new Date(data.sunset.toISOString());\n        // const time = new Date(sunset - sunrise).toISOString().slice(11, -5);\n        const time2 = new Date(sunset - sunrise).getTime();\n        // console.log(new Date(time2).toISOString().slice(11, -5));\n        // const values = time.split(':');\n        // return (parseInt(values[0]) * 60 + parseInt(values[1])) * 60 + parseInt(values[2])\n        return time2;\n    } catch (e) {\n        return null;\n    }\n};\n\nconst calculateMultipleDays = (firstDate, secondDate, latitude, longitude) => {\n    const startDate = new Date(firstDate.getTime());\n    const endDate = new Date(secondDate.getTime());\n    const result = [];\n    endDate.setDate(endDate.getDate() + 1);\n    while (startDate < endDate) {\n        const time = calculate(startDate, latitude, longitude);\n        if (time === null) {\n            return null;\n        }\n        const day = {date: startDate.getDate() + '/' + (startDate.getMonth() + 1) + '/' + startDate.getFullYear(),\n            time: time};\n        result.push(day);\n        startDate.setDate(startDate.getDate() + 1)\n    }\n    if (result.length > 0) {\n        return result;\n    }\n    return null;\n};\n\nexport default {calculate, calculateMultipleDays};","import React from 'react';\nimport '../App.css'\nimport {AreaChart, ResponsiveContainer, CartesianGrid, XAxis, YAxis, Tooltip, Area} from 'recharts';\n\n\nconst Result = ({data}) => {\n\n    const tickFormatter = (ms) => {\n        return new Date(ms).toISOString().slice(11, -5);\n    };\n\n    let highest = data[0].time;\n    let lowest = data[0].time;\n    for (let i = 1; i < data.length; i++) {\n        if (data[i].time > highest) {\n            highest = data[i].time\n        }\n        if (data[i].time < lowest) {\n            lowest = data[i].time\n        }\n    }\n\n    const CustomTooltip = ({active, payload, label}) => {\n        if (active) {\n            return (\n                <p className=\"label\">{`${label} - ${tickFormatter(payload[0].value)}`}</p>\n            );\n        }\n        return null;\n    };\n\n    return (\n        <div className='result-box'>\n            <p>Alguskuup채eval <strong>{data[0].date}</strong> on p채eva\n                pikkus <strong>{tickFormatter(data[0].time)}</strong></p>\n            <ResponsiveContainer width='100%' height={400}>\n                <AreaChart data={data}>\n                    <CartesianGrid strokeDasharray=\"3 3\"/>\n                    <XAxis label={{value: 'Kuup채ev', angle: 0, position: 'top'}} dataKey='date'/>\n                    <YAxis label={{value: 'P채eva pikkus', angle: 0, position: 'right'}} tickFormatter={tickFormatter}\n                           domain={[lowest - 1000000, highest + 1000000]}/>\n                    <Tooltip content={<CustomTooltip/>}/>\n                    <Area type='monotone' dataKey='time' stroke='#8884d8' fill='#8884d8'/>\n                </AreaChart>\n            </ResponsiveContainer>\n        </div>\n    )\n};\n\nexport default Result;","import React, {useState, useEffect} from 'react';\nimport MapContainer from './MapContainer';\nimport DatePicker, {registerLocale, setDefaultLocale} from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport et from 'date-fns/locale/et';\nimport '../App.css';\nimport calculatorService from '../services/calculator';\nimport Result from \"./Result\";\n\nregisterLocale('et', et);\nsetDefaultLocale('et');\n\nconst UserInterface = () => {\n\n    const [latitude, setLatitude] = useState(58.371);\n    const [longitude, setLongitude] = useState(26.715);\n    const [startDate, setStartDate] = useState(new Date());\n    const [endDate, setEndDate] = useState(new Date());\n    const [data, setData] = useState();\n\n    useEffect(() => {\n        calculateDayLength();\n    }, []);\n\n    const calculateDayLength = () => {\n        setData(calculatorService.calculateMultipleDays(startDate, endDate, latitude, longitude));\n    };\n\n    const handleChange = (event) => {\n        const value = event.target.value;\n        if (event.target.name === 'latitude') {\n            setLatitude(value);\n        } else if (event.target.name === 'longitude') {\n            setLongitude(value)\n        }\n    };\n\n    const handleClick = (event) => {\n        event.preventDefault();\n        calculateDayLength();\n    };\n\n    return (\n        <>\n            <div className='container'>\n                <div className='input-box'>\n                    <form onSubmit={handleClick}>\n                        <label>\n                            Laiuskraad:\n                            <input\n                                type='number'\n                                min='-90'\n                                max='90'\n                                step=\"0.001\"\n                                name='latitude'\n                                value={latitude}\n                                onChange={handleChange}\n                            />\n                        </label>\n                        <label>\n                            Pikkuskraad:\n                            <input\n                                type='number'\n                                min='-180'\n                                max='180'\n                                step=\"0.001\"\n                                name='longitude'\n                                value={longitude}\n                                onChange={handleChange}\n                            />\n                        </label>\n                        <div className='datepicker'>\n                            Alguskuup채ev: <DatePicker selected={startDate} onChange={date => setStartDate(date)}\n                                                      dateFormat=\"dd/MM/yyyy\"/>\n                        </div>\n                        <div className='datepicker'>\n                            L천ppkuup채ev: <DatePicker selected={endDate} onChange={date => setEndDate(date)}\n                                                     dateFormat=\"dd/MM/yyyy\"/>\n                        </div>\n                        <input className='button' type='submit' value='Otsi'/>\n                    </form>\n                </div>\n                <div className='map-box'>\n                    <MapContainer className=\"map-container\" latitude={latitude} longitude={longitude}\n                                  setLatitude={setLatitude} setLongitude={setLongitude}/>\n                </div>\n\n            </div>\n            {data ? <Result data={data} /> : \"Andmed puuduvad\"}\n        </>\n\n    )\n};\n\nexport default UserInterface;","import React from 'react';\nimport './App.css';\nimport UserInterface from \"./components/UserInterface\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        p채eva pikkuse kalkulaator\n      </header>\n        <UserInterface/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}