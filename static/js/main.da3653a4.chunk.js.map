{"version":3,"sources":["components/MapContainer.js","components/Result.js","services/calculator.js","components/UserInterface.js","App.js","index.js"],"names":["L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","MapContainer","latitude","longitude","setLatitude","setLongitude","map","useRef","ImagePath","Map","ref","center","onClick","event","latlng","lat","toFixed","lng","zoom","TileLayer","url","attribution","Marker","position","Result","data","tickFormatter","ms","Date","toUTCString","slice","highest","time","lowest","i","length","CustomTooltip","active","payload","label","className","value","date","split","sunrise","sunset","width","height","strokeDasharray","angle","dataKey","domain","content","type","stroke","fill","calculate","suncalc","getTimes","getTime","e","firstDate","secondDate","startDate","endDate","result","setDate","getDate","day","getMonth","getFullYear","push","registerLocale","et","setDefaultLocale","UserInterface","useState","setStartDate","setEndDate","setData","useEffect","calculateDayLength","calculatorService","handleChange","target","name","onSubmit","preventDefault","min","max","step","onChange","selected","dateFormat","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da3653a4.chunk.js","sourcesContent":["import React, {useState, useRef} from 'react';\n\n// Kaardi jaoks kasutan: https://react-leaflet.js.org/\nimport {Map, Marker, Popup, TileLayer} from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\n\nimport './MapContainer.css';\n\n// https://github.com/PaulLeCam/react-leaflet/issues/453\n// Sain siit abi kui marker kaardile ei ilmunud.\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n\nconst MapContainer = ({latitude, longitude, setLatitude, setLongitude}) => {\n\n    const map = useRef(null);\n\n    L.Icon.Default.ImagePath='../../public/marker/';\n\n    const changeCoordinates = (event) => {\n        setLatitude(event.latlng.lat.toFixed(3));\n        setLongitude(event.latlng.lng.toFixed(3));\n    };\n\n    return <Map ref={map} center={[latitude, longitude]} onClick={changeCoordinates} zoom={7}>\n        <TileLayer\n            url='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        <Marker position={[latitude, longitude]}/>\n    </Map>\n\n};\n\nexport default MapContainer;","import React from 'react';\nimport '../App.css'\n\n// Graafiku joonistamiseks kasutasin: https://recharts.org/en-US/\n// Kood on nende näidete põhjal\nimport {AreaChart, ResponsiveContainer, CartesianGrid, XAxis, YAxis, Tooltip, Area} from 'recharts';\n\n\nconst Result = ({data}) => {\n\n    // Aja teisendamise kood võetud siit: https://stackoverflow.com/questions/9763441/milliseconds-to-time-in-javascript\n    const tickFormatter = (ms) => {\n        return new Date(ms).toUTCString().slice(17, -7);\n    };\n\n    let highest = data[0].time;\n    let lowest = data[0].time;\n    for (let i = 1; i < data.length; i++) {\n        if (data[i].time > highest) {\n            highest = data[i].time\n        }\n        if (data[i].time < lowest) {\n            lowest = data[i].time\n        }\n    }\n\n    const CustomTooltip = ({active, payload, label}) => {\n        if (active) {\n            return (\n                <p className=\"label\">{`${label} - ${tickFormatter(payload[0].value)}`}</p>\n            );\n        }\n        return null;\n    };\n\n    // Aja kujutamiseks y-teljel aitas: https://github.com/recharts/recharts/issues/956\n    return (\n        <div className='result-box'>\n            <p>Alguskuupäeval <strong>{data[0].date}</strong> on päeva\n                pikkus <strong>{tickFormatter(data[0].time).split(':')[0]} tundi ja {tickFormatter(data[0].time).split(':')[1]} minutit</strong></p>\n            <p> Päikesetõus: <strong>{tickFormatter(data[0].sunrise)} UTC</strong>\n                , päikeseloojang: <strong>{tickFormatter(data[0].sunset)} UTC</strong>\n            </p>\n            <ResponsiveContainer width='100%' height={400}>\n                <AreaChart data={data}>\n                    <CartesianGrid strokeDasharray=\"3 3\"/>\n                    <XAxis label={{value: 'Kuupäev', angle: 0, position: 'top'}} dataKey='date'/>\n                    <YAxis label={{value: 'Päeva pikkus', angle: 0, position: 'right'}} tickFormatter={tickFormatter}\n                           domain={[lowest - 1000000, highest + 1000000]}/>\n                    <Tooltip content={<CustomTooltip/>}/>\n                    <Area type='monotone' dataKey='time' stroke='#8884d8' fill='#8884d8'/>\n                </AreaChart>\n            </ResponsiveContainer>\n        </div>\n    )\n};\n\nexport default Result;","/*\nArvutab päikesetõusu ja päikeseloojangu kellaajad. Nende abil päeva pikkuse.\nTagastab tulemustest järjendi, milles iga objekt on üks kuupäev.\nObjekti väljad on: date, sunrise, sunset, time.\nArvutuste jaoks kasutan teeki: https://github.com/mourner/suncalc\n*/\nimport suncalc from 'suncalc';\n\nconst calculate = (date, latitude, longitude) => {\n    // Äärmuslike koordinaatide puhul viskab suncalc errori.\n    // Sellisel juhul tagastan 'null' ehk kasutaja valitud asukoht ei ole sobilik.\n    try {\n        const data = suncalc.getTimes(date, latitude, longitude);\n        const sunrise = new Date(data.sunrise.toUTCString());\n        const sunset = new Date(data.sunset.toUTCString());\n        const time = new Date(sunset - sunrise).getTime();\n        return [sunrise.getTime(), sunset.getTime(), time];\n    } catch (e) {\n        return null;\n    }\n};\n\nconst calculateMultipleDays = (firstDate, secondDate, latitude, longitude) => {\n    const startDate = new Date(firstDate.getTime());\n    const endDate = new Date(secondDate.getTime());\n    const result = [];\n    endDate.setDate(endDate.getDate() + 1);\n    while (startDate < endDate) {\n        const time = calculate(startDate, latitude, longitude);\n        if (time === null) {\n            return null;\n        }\n        const day = {date: startDate.getDate() + '/' + (startDate.getMonth() + 1) + '/' + startDate.getFullYear(),\n            sunrise: time[0],\n            sunset: time[1],\n            time: time[2]};\n        result.push(day);\n        startDate.setDate(startDate.getDate() + 1)\n    }\n    if (result.length > 0) {\n        return result;\n    }\n    return null;\n};\n\nexport default {calculate, calculateMultipleDays};","import React, {useState, useEffect} from 'react';\n\n// Kasutan kuupäeva valimise elemendiks paketti: https://reactdatepicker.com/\nimport DatePicker, {registerLocale, setDefaultLocale} from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport MapContainer from './MapContainer';\nimport Result from \"./Result\";\nimport '../App.css';\nimport calculatorService from '../services/calculator';\n\n// Et DatePicker oleks eesti keeles on vaja muuta date-fns locale eesti peale.\n// https://date-fns.org/\nimport et from 'date-fns/locale/et';\nregisterLocale('et', et);\nsetDefaultLocale('et');\n\nconst UserInterface = () => {\n\n    const [latitude, setLatitude] = useState(58.371);\n    const [longitude, setLongitude] = useState(26.715);\n    const [startDate, setStartDate] = useState(new Date());\n    const [endDate, setEndDate] = useState(new Date());\n    const [data, setData] = useState();\n\n    useEffect(() => {\n        calculateDayLength();\n    }, []);\n\n    const calculateDayLength = () => {\n        setData(calculatorService.calculateMultipleDays(startDate, endDate, latitude, longitude));\n    };\n\n    const handleChange = (event) => {\n        const value = event.target.value;\n        if (event.target.name === 'latitude') {\n            setLatitude(value);\n        } else if (event.target.name === 'longitude') {\n            setLongitude(value)\n        }\n    };\n\n    const handleClick = (event) => {\n        event.preventDefault();\n        calculateDayLength();\n    };\n\n    return (\n        <>\n            <div className='container'>\n                <div className='input-box'>\n                    <form onSubmit={handleClick}>\n                        <label>\n                            Laiuskraad:\n                            <input\n                                type='number'\n                                min='-90'\n                                max='90'\n                                step=\"0.001\"\n                                name='latitude'\n                                value={latitude}\n                                onChange={handleChange}\n                            />\n                        </label>\n                        <label>\n                            Pikkuskraad:\n                            <input\n                                type='number'\n                                min='-180'\n                                max='180'\n                                step=\"0.001\"\n                                name='longitude'\n                                value={longitude}\n                                onChange={handleChange}\n                            />\n                        </label>\n                        <div className='datepicker'>\n                            Alguskuupäev: <DatePicker selected={startDate} onChange={date => setStartDate(date)}\n                                                      dateFormat=\"dd/MM/yyyy\"/>\n                        </div>\n                        <div className='datepicker'>\n                            Lõppkuupäev: <DatePicker selected={endDate} onChange={date => setEndDate(date)}\n                                                     dateFormat=\"dd/MM/yyyy\"/>\n                        </div>\n                        <input className='button' type='submit' value='Otsi'/>\n                    </form>\n                </div>\n                <div className='map-box'>\n                    <MapContainer className=\"map-container\" latitude={latitude} longitude={longitude}\n                                  setLatitude={setLatitude} setLongitude={setLongitude}/>\n                </div>\n\n            </div>\n            {data ? <Result data={data} /> : \"Asukoht ei sobi!\"}\n        </>\n\n    )\n};\n\nexport default UserInterface;","import React from 'react';\nimport './App.css';\nimport UserInterface from \"./components/UserInterface\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        päeva pikkuse kalkulaator\n      </header>\n        <UserInterface/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}